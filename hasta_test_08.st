Object subclass: #Eleccion	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'PLP-TP3'!!Eleccion methodsFor: 'as yet unclassified' stamp: 'JuanEdi 11/8/2014 03:53'!asString	^ self class name.! !!Eleccion methodsFor: 'as yet unclassified' stamp: 'turtleLea 11/18/2014 23:37'!hash	^ self class hash.! !!Eleccion methodsFor: 'as yet unclassified' stamp: 'turtleLea 11/19/2014 00:19'!eleccionSuperadora		^ Eleccion todas detect: [ :e | e ganaContra: self ]! !!Eleccion methodsFor: 'consulta de resultados' stamp: 'JuanEdi 11/8/2014 00:27'!noEmpataContra: otraEleccion	^ (self empataContra: otraEleccion) not.! !!Eleccion methodsFor: 'consulta de resultados' stamp: 'JuanEdi 11/8/2014 01:03'!empataContra: otraEleccion	^ (self ganadorContra: otraEleccion) isNil.! !!Eleccion methodsFor: 'consulta de resultados' stamp: 'JuanEdi 11/8/2014 01:04'!ganaContra: otraEleccion	^ (self noEmpataContra: otraEleccion)	 	and:		[ (self ganadorContra: otraEleccion) = self ]! !!Eleccion methodsFor: 'consulta de resultados' stamp: 'turtleLea 11/18/2014 23:37'!= otraEleccion	^self class = otraEleccion class. ! !!Eleccion methodsFor: 'consulta de resultados' stamp: 'JuanEdi 11/8/2014 00:29'!pierdeContra: otraEleccion	^ (self noEmpataContra: otraEleccion)		and:		[ (self ganaContra: otraEleccion) not ]! !!Eleccion methodsFor: 'double dispatch' stamp: 'JuanEdi 11/8/2014 04:26'!ganadorContraPapel		^ self subclassResponsibility.! !!Eleccion methodsFor: 'double dispatch' stamp: 'JuanEdi 11/8/2014 04:26'!ganadorContraTijera		^ self subclassResponsibility.! !!Eleccion methodsFor: 'double dispatch' stamp: 'Raul 11/16/2014 17:55'!ganadorContraPiedra		^ self subclassResponsibility.! !!Eleccion methodsFor: 'double dispatch' stamp: 'JuanEdi 11/8/2014 04:24'!ganadorContra: otraEleccion	^ self subclassResponsibility.! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Eleccion class	instanceVariableNames: ''!!Eleccion class methodsFor: 'as yet unclassified' stamp: 'turtleLea 11/19/2014 01:36'!lagarto		^ Lagarto new.! !!Eleccion class methodsFor: 'as yet unclassified' stamp: 'Raul 11/16/2014 18:21'!piedra		^ Piedra new.! !!Eleccion class methodsFor: 'as yet unclassified' stamp: 'Raul 11/16/2014 18:22'!tijera		^ Tijera new.! !!Eleccion class methodsFor: 'as yet unclassified' stamp: 'turtleLea 11/19/2014 01:36'!spock		^ Spock new.! !!Eleccion class methodsFor: 'as yet unclassified' stamp: 'Raul 11/16/2014 20:18'!papel		^ Papel new.! !!Eleccion class methodsFor: 'as yet unclassified' stamp: 'turtleLea 11/19/2014 00:16'!todas	^ self subclasses collect: [ :s | s new ]! !Object subclass: #Resultado	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'PLP-TP3'!"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Resultado class	instanceVariableNames: ''!!Resultado class methodsFor: 'as yet unclassified' stamp: 'JuanEdi 11/8/2014 01:38'!jugador1: unJugador conEleccion: unaEleccion jugador2: otroJugador conEleccion: otraEleccion 		(unaEleccion empataContra: otraEleccion) ifTrue: [		^ Empate entre: unJugador eligiendo: unaEleccion y: otroJugador eligiendo: otraEleccion.	].		^ (unaEleccion ganaContra: otraEleccion)	ifTrue: [ Victoria de: unJugador eligiendo: unaEleccion contra: otroJugador eligiendo: otraEleccion ]	ifFalse: [ Victoria de: otroJugador eligiendo: otraEleccion contra: unJugador eligiendo: unaEleccion ].! !Resultado subclass: #Victoria	instanceVariableNames: 'ganador eleccionGanadora perdedor eleccionPerdedora'	classVariableNames: ''	poolDictionaries: ''	category: 'PLP-TP3'!!Victoria methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/18/2014 00:44'!notificarAJugadores			ganador ganoEligiendo: eleccionGanadora contra: perdedor eligiendo: eleccionPerdedora.		perdedor perdioEligiendo: eleccionPerdedora contra: ganador eligiendo: eleccionGanadora.! !!Victoria methodsFor: 'as yet unclassified' stamp: 'JuanEdi 11/8/2014 01:45'!ganador	^ ganador! !!Victoria methodsFor: 'as yet unclassified' stamp: 'JuanEdi 11/8/2014 01:42'!esEmpate		^ false.! !!Victoria methodsFor: 'as yet unclassified' stamp: 'JuanEdi 11/8/2014 01:41'!ganador: unJugador eleccionGanadora: unaEleccion perdedor: otroJugador eligiendo: otraEleccion 		ganador := unJugador.	eleccionGanadora := unaEleccion.	perdedor := otroJugador.	eleccionPerdedora := otraEleccion.! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Victoria class	instanceVariableNames: ''!!Victoria class methodsFor: 'as yet unclassified' stamp: 'JuanEdi 11/8/2014 01:40'!de: unJugador eligiendo: unaEleccion contra: otroJugador eligiendo: otraEleccion 		^ self new 		ganador: unJugador		eleccionGanadora: unaEleccion		perdedor: otroJugador		eligiendo: otraEleccion;		yourself.! !Object subclass: #Juego	instanceVariableNames: 'jugador1 jugador2 resultado eleccion1 eleccion2'	classVariableNames: ''	poolDictionaries: ''	category: 'PLP-TP3'!!Juego methodsFor: 'as yet unclassified' stamp: 'JuanEdi 11/8/2014 02:28'!revancha	^ self iniciar.! !!Juego methodsFor: 'as yet unclassified' stamp: 'JuanEdi 11/8/2014 01:53'!iniciar		eleccion1 := jugador1 eleccion.	eleccion2 := jugador2 eleccion.		resultado := Resultado jugador1: jugador1 conEleccion: eleccion1				 			jugador2: jugador2 conEleccion: eleccion2.								resultado notificarAJugadores.! !!Juego methodsFor: 'as yet unclassified' stamp: 'JuanEdi 11/8/2014 01:27'!resultado		resultado isNil ifTrue: [ self iniciar ].		^ resultado.! !!Juego methodsFor: 'as yet unclassified' stamp: 'JuanEdi 11/8/2014 00:57'!jugador1: unJugador jugador2: otroJugador 		jugador1 := unJugador.	jugador2 := otroJugador.! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Juego class	instanceVariableNames: ''!!Juego class methodsFor: 'as yet unclassified' stamp: 'JuanEdi 11/8/2014 04:15'!mejorDe: cantidadDeJuegos entre: unJugador y: otroJugador	| j |		j := Juego entre: unJugador y: otroJugador.	cantidadDeJuegos timesRepeat: [ j iniciar ].! !!Juego class methodsFor: 'as yet unclassified' stamp: 'JuanEdi 11/8/2014 00:56'!entre: unJugador y: otroJugador 		^ self new jugador1: unJugador jugador2: otroJugador;			yourself.! !!Juego class methodsFor: 'as yet unclassified' stamp: 'JuanEdi 11/8/2014 04:15'!mejorDe: cantidadDeJuegos contra: unJugador	Juego mejorDe: cantidadDeJuegos entre: Jugador humano y: unJugador.! !Eleccion subclass: #Papel	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'PLP-TP3'!!Papel methodsFor: 'double dispatch' stamp: 'Raul 11/16/2014 18:06'!ganadorContraPapel		^ nil.! !!Papel methodsFor: 'double dispatch' stamp: 'Raul 11/16/2014 20:23'!ganadorContraTijera		^ Tijera new.! !!Papel methodsFor: 'double dispatch' stamp: 'Raul 11/16/2014 20:24'!ganadorContraPiedra		^ self.! !!Papel methodsFor: 'double dispatch' stamp: 'Raul 11/16/2014 18:06'!ganadorContra: otraEleccion	^ otraEleccion ganadorContraPapel.! !!Papel methodsFor: 'as yet unclassified' stamp: 'turtleLea 11/19/2014 01:38'!ganadorContraLagarto		^ Lagarto new.! !!Papel methodsFor: 'as yet unclassified' stamp: 'turtleLea 11/19/2014 01:39'!ganadorContraSpock		^ self.! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Papel class	instanceVariableNames: 'tipo'!Object subclass: #Jugador	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'PLP-TP3'!!Jugador methodsFor: 'as yet unclassified' stamp: 'JuanEdi 11/8/2014 01:45'!perdioEligiendo: miEleccion contra: otroJugador eligiendo: eleccionContraria 		"Implementar si hace falta actuar en base a este evento."! !!Jugador methodsFor: 'as yet unclassified' stamp: 'JuanEdi 11/8/2014 01:50'!eleccion	self subclassResponsibility.! !!Jugador methodsFor: 'as yet unclassified' stamp: 'JuanEdi 11/8/2014 01:49'!empatoEligiendo: miEleccion contra: otroJugador eligiendo: eleccionContraria 		"Implementar si hace falta actuar en base a este evento."! !!Jugador methodsFor: 'as yet unclassified' stamp: 'JuanEdi 11/8/2014 01:44'!ganoEligiendo: miEleccion contra: otroJugador eligiendo: eleccionContraria 		"Implementar si hace falta actuar en base a este evento."! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Jugador class	instanceVariableNames: ''!!Jugador class methodsFor: 'as yet unclassified' stamp: 'turtleLea 11/19/2014 02:32'!aleatorioConGenerador: unaEleccion	^ Aleatorio new conGenerador: unaEleccion.! !!Jugador class methodsFor: 'as yet unclassified' stamp: 'JuanEdi 11/8/2014 05:52'!humano	^ self shouldBeImplemented.! !!Jugador class methodsFor: 'as yet unclassified' stamp: 'JuanEdi 11/8/2014 05:52'!aleatorio	^ self shouldBeImplemented.! !!Jugador class methodsFor: 'as yet unclassified' stamp: 'JuanEdi 11/8/2014 05:52'!conHistoriaHasta: cantidadDeResultadosAGuardar	^ self shouldBeImplemented.! !!Jugador class methodsFor: 'as yet unclassified' stamp: 'turtleLea 11/18/2014 00:57'!siempre: unaEleccion 		^Terco new elegir: unaEleccion.! !!Jugador class methodsFor: 'as yet unclassified' stamp: 'turtleLea 11/18/2014 01:00'!adaptativoIniciandoCon: unaEleccion	^ Adaptativo new elegir: unaEleccion.! !Jugador subclass: #Aleatorio	instanceVariableNames: 'generador'	classVariableNames: ''	poolDictionaries: ''	category: 'PLP-TP3'!!Aleatorio methodsFor: 'as yet unclassified' stamp: 'turtleLea 11/19/2014 02:37'!eleccion	|i|	i := generador nextInt: 4.	^ Eleccion todas at: i.! !!Aleatorio methodsFor: 'as yet unclassified' stamp: 'turtleLea 11/19/2014 02:31'!conGenerador: unGenerador	generador := unGenerador! !Jugador subclass: #Terco	instanceVariableNames: 'mismaEleccionDeSiempre'	classVariableNames: ''	poolDictionaries: ''	category: 'PLP-TP3'!!Terco methodsFor: 'as yet unclassified' stamp: 'turtleLea 11/17/2014 23:52'!conEleccion: unaEleccion	eleccion := unaEleccion! !!Terco methodsFor: 'as yet unclassified' stamp: 'turtleLea 11/19/2014 00:23'!eleccion	^mismaEleccionDeSiempre .! !!Terco methodsFor: 'as yet unclassified' stamp: 'turtleLea 11/19/2014 00:23'!elegir: unaEleccion 		mismaEleccionDeSiempre := unaEleccion.! !Resultado subclass: #Empate	instanceVariableNames: 'jugador1 eleccion1 jugador2 eleccion2'	classVariableNames: ''	poolDictionaries: ''	category: 'PLP-TP3'!!Empate methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/18/2014 00:42'!notificarAJugadores		jugador1 empatoEligiendo: eleccion1 			contra: jugador2  			eligiendo: eleccion2.	jugador2 empatoEligiendo: eleccion2 			contra: jugador1  			eligiendo: eleccion1.! !!Empate methodsFor: 'as yet unclassified' stamp: 'JuanEdi 11/8/2014 02:55'!ganador	^ nil.! !!Empate methodsFor: 'as yet unclassified' stamp: 'JuanEdi 11/8/2014 01:49'!esEmpate		^ true.! !!Empate methodsFor: 'as yet unclassified' stamp: 'JuanEdi 11/8/2014 01:48'!jugador1: unJugador eleccion1: unaEleccion jugador2: otroJugador eleccion2: otraEleccion 		jugador1 := unJugador.	eleccion1 := unaEleccion.	jugador2 := otroJugador.	eleccion2 := otraEleccion.! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Empate class	instanceVariableNames: ''!!Empate class methodsFor: 'as yet unclassified' stamp: 'JuanEdi 11/8/2014 01:47'!entre: unJugador eligiendo: unaEleccion y: otroJugador eligiendo: otraEleccion 		^ self new		jugador1: unJugador		eleccion1: unaEleccion		jugador2: otroJugador		eleccion2: otraEleccion;		yourself.! !Object subclass: #GeneradorRandomParaTest	instanceVariableNames: 'siguiente'	classVariableNames: ''	poolDictionaries: ''	category: 'PLP-TP3'!!GeneradorRandomParaTest methodsFor: 'as yet unclassified' stamp: 'JuanEdi 11/8/2014 03:46'!siguiente: unNumeroAleatorio		siguiente := unNumeroAleatorio.! !!GeneradorRandomParaTest methodsFor: 'as yet unclassified' stamp: 'JuanEdi 11/8/2014 03:46'!nextInt: anInteger 		^ siguiente.! !Eleccion subclass: #Spock	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'PLP-TP3'!!Spock methodsFor: 'as yet unclassified' stamp: 'turtleLea 11/19/2014 01:41'!ganadorContra: otraEleccion	^ otraEleccion ganadorContraSpock.! !!Spock methodsFor: 'as yet unclassified' stamp: 'turtleLea 11/19/2014 01:40'!ganadorContraPiedra		^ self.! !!Spock methodsFor: 'as yet unclassified' stamp: 'turtleLea 11/19/2014 01:41'!ganadorContraTijera		^ self .! !!Spock methodsFor: 'as yet unclassified' stamp: 'turtleLea 11/19/2014 01:40'!ganadorContraPapel		^ Papel new.! !!Spock methodsFor: 'as yet unclassified' stamp: 'turtleLea 11/19/2014 01:38'!ganadorContraLagarto		^ Lagarto new.! !!Spock methodsFor: 'as yet unclassified' stamp: 'turtleLea 11/19/2014 01:39'!ganadorContraSpock		^ nil.! !TestCase subclass: #TP3Tests	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'PLP-TP3'!!TP3Tests methodsFor: 'as yet unclassified' stamp: 'pb 11/10/2014 18:35'!test07ElJuegoSeAdaptaANuevasReglas	"https://www.youtube.com/watch?v=_PUEoDYpUyQ"	self assert: (Eleccion piedra pierdeContra: Eleccion spock).	self assert: (Eleccion papel ganaContra: Eleccion spock).	self assert: (Eleccion lagarto empataContra: Eleccion lagarto).	self assert: (Eleccion spock pierdeContra: Eleccion lagarto).! !!TP3Tests methodsFor: 'as yet unclassified' stamp: 'JuanEdi 11/8/2014 05:04'!test04UnJuegoConsisteEnHacerCompetirLaEleccionDeDosJugadores	| jugadorPiedra jugadorPapel |		"https://www.youtube.com/watch?feature=player_detailpage&v=dwj254ofJbk#t=14"	jugadorPiedra := Jugador siempre: Eleccion piedra.	jugadorPapel := Jugador siempre: Eleccion papel.	self assert: (Juego entre: jugadorPiedra y: jugadorPapel) resultado ganador = jugadorPapel.	self assert: (Juego entre: jugadorPiedra y: jugadorPiedra) resultado esEmpate.! !!TP3Tests methodsFor: 'as yet unclassified' stamp: 'turtleLea 11/17/2014 22:45'!test03SePuedeObtenerUnaOpcionSuperadoraParaCualquierEleccion	self assert: (Eleccion todas allSatisfy: [ :eleccion |		eleccion eleccionSuperadora ganaContra: eleccion.	]).! !!TP3Tests methodsFor: 'as yet unclassified' stamp: 'pb 11/10/2014 18:36'!test02SeCumplenLasReglasDelJuego" Implementar los distintos ganaContraX para lograr la funcionalidad pedida"	self assert: (Eleccion piedra ganaContra: Eleccion tijera).	self assert: (Eleccion piedra pierdeContra: Eleccion papel).	self assert: (Eleccion piedra empataContra: Eleccion piedra).	self assert: (Eleccion papel ganaContra: Eleccion piedra).	self assert: (Eleccion papel pierdeContra: Eleccion tijera).	self assert: (Eleccion papel empataContra: Eleccion papel).		self assert: (Eleccion tijera ganaContra: Eleccion papel).	self assert: (Eleccion tijera pierdeContra: Eleccion piedra).	self assert: (Eleccion tijera empataContra: Eleccion tijera).! !!TP3Tests methodsFor: 'as yet unclassified' stamp: 'JuanEdi 11/8/2014 05:04'!test06UnJugadorAdaptativoCambiaSuEleccionCuandoEmpata	| jugador contrincante |		jugador := Jugador adaptativoIniciandoCon: Eleccion piedra.	contrincante := Jugador siempre: Eleccion piedra.	self assert: jugador eleccion = Eleccion piedra.	(Juego entre: jugador y: contrincante) iniciar.	self assert: (jugador eleccion ganaContra: contrincante eleccion).! !!TP3Tests methodsFor: 'as yet unclassified' stamp: 'pb 11/10/2014 18:34'!test08UnJugadorAleatorioUtilizaElGeneradorParaDecidirSuEleccion	"Acá se construye el generador para poder testear. Por conveniencia sería recomendable que la forma por defecto de construir el jugador aleatorio utilice un generador real.	http://xkcd.com/221/"	| jugador generador |	generador := GeneradorRandomParaTest new.	jugador := Jugador aleatorioConGenerador: generador.		generador siguiente: (Eleccion todas indexOf: Eleccion piedra).	self assert: jugador eleccion = Eleccion piedra.		generador siguiente: (Eleccion todas indexOf: Eleccion spock).	self assert: jugador eleccion = Eleccion spock.! !!TP3Tests methodsFor: 'as yet unclassified' stamp: 'pb 11/10/2014 18:30'!test01LaIgualdadYElHashDeEleccionNoDistingueInstanciasDelMismoTipo	self assert: Eleccion piedra = Eleccion piedra.	self assert: Eleccion papel = Eleccion papel.	self assert: Eleccion tijera = Eleccion tijera.		self assert: Eleccion piedra hash = Eleccion piedra hash.	self assert: Eleccion papel hash= Eleccion papel hash.	self assert: Eleccion tijera hash= Eleccion tijera hash.! !!TP3Tests methodsFor: 'as yet unclassified' stamp: 'JuanEdi 11/8/2014 05:04'!test05UnJugadorAdaptativoCambiaSuEleccionCuandoPierde	| jugador contrincante |		jugador := Jugador adaptativoIniciandoCon: Eleccion piedra.	contrincante := Jugador siempre: Eleccion papel.	self assert: jugador eleccion = Eleccion piedra.	(Juego entre: jugador y: contrincante) iniciar.	self assert: (jugador eleccion ganaContra: contrincante eleccion).! !Eleccion subclass: #Tijera	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'PLP-TP3'!!Tijera methodsFor: 'as yet unclassified' stamp: 'turtleLea 11/19/2014 01:38'!ganadorContraLagarto		^ self.! !!Tijera methodsFor: 'as yet unclassified' stamp: 'turtleLea 11/19/2014 01:39'!ganadorContraSpock		^ Spock new.! !!Tijera methodsFor: 'double dispatch' stamp: 'Raul 11/16/2014 20:24'!ganadorContraPapel		^ self.! !!Tijera methodsFor: 'double dispatch' stamp: 'Raul 11/16/2014 18:02'!ganadorContraTijera		^ nil .! !!Tijera methodsFor: 'double dispatch' stamp: 'Raul 11/16/2014 20:24'!ganadorContraPiedra		^ Piedra new.! !!Tijera methodsFor: 'double dispatch' stamp: 'Raul 11/16/2014 18:00'!ganadorContra: otraEleccion	^ otraEleccion ganadorContraTijera.! !Jugador subclass: #Adaptativo	instanceVariableNames: 'proximaEleccion'	classVariableNames: ''	poolDictionaries: ''	category: 'PLP-TP3'!!Adaptativo methodsFor: 'as yet unclassified' stamp: 'turtleLea 11/19/2014 00:26'!perdioEligiendo: miEleccion contra: otroJugador eligiendo: eleccionContraria	proximaEleccion  := eleccionContraria eleccionSuperadora ! !!Adaptativo methodsFor: 'as yet unclassified' stamp: 'turtleLea 11/19/2014 00:27'!eleccion	^proximaEleccion! !!Adaptativo methodsFor: 'as yet unclassified' stamp: 'turtleLea 11/19/2014 00:27'!elegir: unaEleccion	proximaEleccion := unaEleccion! !!Adaptativo methodsFor: 'as yet unclassified' stamp: 'turtleLea 11/19/2014 00:27'!empatoEligiendo: miEleccion contra: otroJugador eligiendo: eleccionContraria	proximaEleccion := eleccionContraria eleccionSuperadora! !!Adaptativo methodsFor: 'as yet unclassified' stamp: 'turtleLea 11/18/2014 00:17'!conEleccion: unaEleccion	eleccion := unaEleccion! !Eleccion subclass: #Piedra	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'PLP-TP3'!!Piedra methodsFor: 'double dispatch' stamp: 'Raul 11/16/2014 20:23'!ganadorContraPapel		^ Papel new.! !!Piedra methodsFor: 'double dispatch' stamp: 'Raul 11/16/2014 20:24'!ganadorContraTijera		^ self.! !!Piedra methodsFor: 'double dispatch' stamp: 'Raul 11/16/2014 18:02'!ganadorContraPiedra		^ nil.! !!Piedra methodsFor: 'double dispatch' stamp: 'Raul 11/16/2014 18:00'!ganadorContra: otraEleccion	^ otraEleccion ganadorContraPiedra .! !!Piedra methodsFor: 'as yet unclassified' stamp: 'turtleLea 11/19/2014 01:38'!ganadorContraLagarto		^ self.! !!Piedra methodsFor: 'as yet unclassified' stamp: 'turtleLea 11/19/2014 01:39'!ganadorContraSpock		^ Spock new.! !Eleccion subclass: #Lagarto	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'PLP-TP3'!!Lagarto methodsFor: 'as yet unclassified' stamp: 'turtleLea 11/19/2014 01:41'!ganadorContra: otraEleccion	^ otraEleccion ganadorContraLagarto.! !!Lagarto methodsFor: 'as yet unclassified' stamp: 'turtleLea 11/19/2014 01:40'!ganadorContraPiedra		^ Piedra new.! !!Lagarto methodsFor: 'as yet unclassified' stamp: 'turtleLea 11/19/2014 01:41'!ganadorContraTijera		^ Tijera new .! !!Lagarto methodsFor: 'as yet unclassified' stamp: 'turtleLea 11/19/2014 01:40'!ganadorContraPapel		^ self.! !!Lagarto methodsFor: 'as yet unclassified' stamp: 'turtleLea 11/19/2014 01:38'!ganadorContraLagarto		^ nil.! !!Lagarto methodsFor: 'as yet unclassified' stamp: 'turtleLea 11/19/2014 01:39'!ganadorContraSpock		^ self.! !